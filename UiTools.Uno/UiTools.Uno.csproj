<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
      <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows')) or '$(EnableWindowsTargeting)' == 'true'">$(TargetFrameworks);net8.0-windows10.0.19041</TargetFrameworks>
    <TargetFrameworks>$(TargetFrameworks);net8.0;net8.0-ios;net8.0-maccatalyst;net8.0-android</TargetFrameworks>
    <!-- Ensures the .xr.xml files are generated in a proper layout folder -->
    <GenerateLibraryLayout>true</GenerateLibraryLayout>
  </PropertyGroup>
  <ItemGroup>
    <None Remove="My\CustomControls\CloseButton.xaml" />
    <None Remove="My\Styles\CommonStyles.xaml" />
    <None Remove="My\Views\ErrorDialog.xaml" />
    <None Remove="My\Views\InputDialog.xaml" />
    <None Remove="My\Views\SortedByPanel.xaml" />
    <None Remove="My\Views\SortedByText.xaml" />
    <None Remove="My\Views\StackableMessageView.xaml" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="CommunityToolkit.Mvvm" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" />
    <PackageReference Include="System.Net.Http" />
    <PackageReference Include="System.Text.RegularExpressions" />
    <PackageReference Include="System.Threading.Tasks.Dataflow" />
    <PackageReference Include="Uno.WinUI" />
  </ItemGroup>
  
  
  
  
<Choose>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
      <PropertyGroup>
        <IsAndroid>true</IsAndroid>
        <SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
      <PropertyGroup>
        <IsIOS>true</IsIOS>
        <SupportedOSPlatformVersion>14.2</SupportedOSPlatformVersion>
      </PropertyGroup>

      <!--
      Eagerly define capabilities for iOS to avoid VS 2022 to ask for
      project reload, and ninitialize the debugger toolbar faster.
      See https://github.com/unoplatform/uno/issues/14303.
      -->
      <ItemGroup>
        <ProjectCapability Include="XamarinStaticLaunchProfiles" />
        <ProjectCapability Include="Maui" />
        <ProjectCapability Include="MauiCore" />
      </ItemGroup>
    </When>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">
      <PropertyGroup>
        <IsMac>true</IsMac>
        <SupportedOSPlatformVersion>10.14</SupportedOSPlatformVersion>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">
      <PropertyGroup>
        <IsMacCatalyst>true</IsMacCatalyst>
        <SupportedOSPlatformVersion>14.0</SupportedOSPlatformVersion>
      </PropertyGroup>
    </When>
    <When Condition="$(TargetFramework.Contains('windows10'))">
      <PropertyGroup>
        <IsWinAppSdk>true</IsWinAppSdk>
        <SupportedOSPlatformVersion>10.0.18362.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion>
        <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
        <EnableCoreMrtTooling Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">false</EnableCoreMrtTooling>
      </PropertyGroup>
    </When>
  </Choose>  
  
  
  
  
  

    <ItemGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
        <PackageReference Include="CommunityToolkit.WinUI.UI.Controls" />
    </ItemGroup>
    <ItemGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) != 'windows'">
        <PackageReference Include="Uno.CommunityToolkit.WinUI.UI.Controls" />
    </ItemGroup>
    <ItemGroup>
      <Page Update="My\Views\StackableMessageView.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="My\Views\InputDialog.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="My\Views\ErrorDialog.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="My\Views\SortedByPanel.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="My\Views\SortedByText.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="My\Styles\CommonStyles.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="My\CustomControls\CloseButton.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>

    <Choose>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
      <ItemGroup>
        <PackageReference Include="Microsoft.WindowsAppSDK" />
        <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
      </ItemGroup>
      <ItemGroup>
        <!--
				If you encounter this error message:

					error NETSDK1148: A referenced assembly was compiled using a newer version of Microsoft.Windows.SDK.NET.dll.
					Please update to a newer .NET SDK in order to reference this assembly.

				This means that the two packages below must be aligned with the "build" version number of
				the "Microsoft.Windows.SDK.BuildTools" package above, and the "revision" version number
				must be the highest found in https://www.nuget.org/packages/Microsoft.Windows.SDK.NET.Ref.
				-->
        <!-- <FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" RuntimeFrameworkVersion="10.0.22621.28" />
				<FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" TargetingPackVersion="10.0.22621.28" /> -->
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Content Include="Assets\**" />
        <Page Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
        <Compile Update="**\*.xaml.cs">
          <DependentUpon>%(Filename)</DependentUpon>
        </Compile>
        <PriResource Include="**\*.resw" />
      </ItemGroup>
    </Otherwise>
  </Choose>
</Project>